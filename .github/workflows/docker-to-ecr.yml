# https://github.com/aws-actions/amazon-ecr-login?tab=readme-ov-file#permissions
name: Docker image build and publish
on:
  push:
    branches:
      - main
      - turnip/dev

jobs:
  docker:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    outputs:
      image_tag: ${{ steps.build-publish.outputs.image_tag }}
      full_image: ${{ steps.build-publish.outputs.full_image }}

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.aws_account_id }}:role/TurnipReactInfraStack-LogicGithubActionRole4C78B53C-aDy2hpNoxWlY
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: ${{ secrets.aws_account_id }}
          mask-password: "true" # see: https://github.com/aws-actions/amazon-ecr-login#docker-credentials

      - name: Set variables main
        if: ${{ github.ref_name == 'main' }}
        run: |
          echo "REPO_NAME=${{secrets.aws_account_id}}.dkr.ecr.us-west-2.amazonaws.com/turnipreactinfrastackturnipreactprod3f426b76-turnipreactprodrepositorydca90c89-gofxzzflfzgm:latest" >> "$GITHUB_ENV"
          echo "::add-mask::${{secrets.MAIN_DEPLOYER_LAMBDA_NAME}}"
          echo "LAMBDA_NAME=${{secrets.MAIN_DEPLOYER_LAMBDA_NAME}}" >> "$GITHUB_ENV"

      - name: Set variables for turnip/dev
        if: ${{ github.ref_name == 'turnip/dev' }}
        run: |
          echo "REPO_NAME=${{secrets.aws_account_id}}.dkr.ecr.us-west-2.amazonaws.com/turnipreactinfrastackturnipreactstaging80ac9d6d-turnipreactstagingrepository40cb56f2-yg7afhsa40f2:latest" >> "$GITHUB_ENV"
          echo "::add-mask::${{secrets.STAGING_DEPLOYER_LAMBDA_NAME}}"
          echo "LAMBDA_NAME=${{secrets.STAGING_DEPLOYER_LAMBDA_NAME}}" >> "$GITHUB_ENV"

      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#example-of-writing-an-environment-variable-to-github_env
      - name: Build, tag, and push image to Amazon ECR
        id: build-publish
        shell: bash
        run: |
          docker build -t "$REPO_NAME" .
          docker push "$REPO_NAME"

      - name: Update ECS
        run: |
          aws lambda invoke --function-name "$LAMBDA_NAME" response.json
          # note to self: you also need to be logged in AWS to invoke the lambda
