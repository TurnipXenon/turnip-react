openapi: 3.0.0
info:
  title: Turnip React API
  version: 0.6.0

servers:
  - url: https://react.turnipxenon.com
    description: Production server
  - url: http://localhost:3000
    description: Local test server

components:
  schemas:
    PublicUser:
      type: object
      required:
        - username
        - id
      properties:
        username:
          type: string
        id:
          type: string
    JobEvent:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        anonymizedNotes:
          type: string
        publicNotes:
          type: string
        eventDate:
          type: string
        jobPostingId:
          type: string
    JobPosting:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        alias:
          type: string
        company:
          type: string
        jobTitle:
          type: string
        jobLink:
          type: string
        resumeLink:
          type: string
        startDate:
          type: string
        sessionId:
          type: string
        userId:
          type: string
        status:
          type: string
          enum:
            - Queued
            - Archived
            - Waiting
            - Active
            - Rejected
        events:
          type: array
          items:
            $ref: "#/components/schemas/JobEvent"
    JobSession:
      type: object
      required:
        - id
        - userId
        - title
        - startDate
        - endDate
        - isPublic
      properties:
        id:
          type: string
        userId:
          type: string
        title:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        isPublic:
          type: boolean
        jobPostings:
          type: array
          items:
            $ref: "#/components/schemas/JobPosting"
  parameters:
    JobSessionParameterID:
      name: sessionId   # Note the name is the same as in the path
      in: path
      required: true
      description: The session ID
      schema:
        type: string
    UserParameterID:
      name: userId   # Note the name is the same as in the path
      in: path
      required: true
      description: The user ID
      schema:
        type: string
    PostingParameterID:
      name: postingId   # Note the name is the same as in the path
      in: path
      required: true
      description: The job posting ID
      schema:
        type: string
    EventParameterID:
      name: eventId   # Note the name is the same as in the path
      in: path
      required: true
      description: The job event ID
      schema:
        type: string

paths:
  /api/login:
    post:
      summary: Login as a users to be able to do more things in the website
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PublicUser"
        '401':
          description: Login error

  /api/job-tracker/users/{userId}/sessions:
    post:
      summary: Create new job session
      parameters:
        - $ref: "#/components/parameters/UserParameterID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
      responses:
        '200':
          description: Job sessions created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobSession"
        '401':
          description: Unauthorized error
    get:
      summary: Get all job sessions for the user
      parameters:
        - $ref: "#/components/parameters/UserParameterID"
      responses:
        '200':
          description: Job sessions found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JobSession"
        '401':
          description: Unauthorized error
        '404':
          description: Missing job session

  /api/job-tracker/sessions/{sessionId}:
    get:
      summary: Get job session
      parameters:
        - $ref: "#/components/parameters/JobSessionParameterID"
      responses:
        '200':
          description: Job session found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobSession"
        '401':
          description: Unauthorized error
        '404':
          description: Missing job session
    put:
      summary: Update job session
      parameters:
        - $ref: "#/components/parameters/JobSessionParameterID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobSession"
      responses:
        '200':
          description: Job session found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobSession"
        '400':
          description: Bad request
        '401':
          description: Unauthorized error
        '404':
          description: Missing job session
    delete:
      summary: Delete job session
      parameters:
        - $ref: "#/components/parameters/JobSessionParameterID"
      responses:
        '200':
          description: Successfully delete job session
        '401':
          description: Unauthorized error
        '404':
          description: Missing job session

  /api/job-tracker/sessions/{sessionId}/postings:
    post:
      summary: Create new job posting
      parameters:
        - $ref: "#/components/parameters/JobSessionParameterID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alias:
                  type: string
                company:
                  type: string
                jobTitle:
                  type: string
                jobLink:
                  type: string
      responses:
        '200':
          description: Job sessions created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/JobSession"
                  - type: object
                    properties:
                      cursorId:
                        type: string
        '401':
          description: Unauthorized error
    get:
      summary: Get all job postings for the session
      parameters:
        - $ref: "#/components/parameters/JobSessionParameterID"
      responses:
        '200':
          description: Job sessions found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JobSession"
        '401':
          description: Unauthorized error
        '404':
          description: Missing job session

  /api/job-tracker/postings/{postingId}:
    get:
      summary: Get job posting
      parameters:
        - $ref: "#/components/parameters/PostingParameterID"
      responses:
        '200':
          description: Job posting found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobPosting"
        '401':
          description: Unauthorized error
        '404':
          description: Missing job posting
    put:
      summary: Update job posting
      parameters:
        - $ref: "#/components/parameters/PostingParameterID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobPosting"
      responses:
        '200':
          description: Job posting updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JobPosting"
        '401':
          description: Unauthorized error
        '404':
          description: Missing job posting
    delete:
      summary: Delete job posting
      parameters:
        - $ref: "#/components/parameters/PostingParameterID"
      responses:
        '200':
          description: Successfully delete job session
        '401':
          description: Unauthorized error
        '404':
          description: Missing job posting

  /api/job-tracker/postings/{postingId}/events:
    post:
      summary: Create new job event
      parameters:
        - $ref: "#/components/parameters/PostingParameterID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
      responses:
        '200':
          description: Job sessions created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobEvent"
        '401':
          description: Unauthorized error
    get:
      summary: Get all job events for the posting
      parameters:
        - $ref: "#/components/parameters/PostingParameterID"
      responses:
        '200':
          description: Job events found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JobEvent"
        '401':
          description: Unauthorized error
        '404':
          description: Missing job session

  /api/job-tracker/events/{eventId}:
    get:
      summary: Get job event
      parameters:
        - $ref: "#/components/parameters/EventParameterID"
      responses:
        '200':
          description: Job event found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JobEvent"
        '401':
          description: Unauthorized error
        '404':
          description: Missing job posting
    put:
      summary: Update job event
      parameters:
        - $ref: "#/components/parameters/EventParameterID"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/JobEvent"
      responses:
        '200':
          description: Job event updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/JobPosting"
        '401':
          description: Unauthorized error
        '404':
          description: Missing job event
    delete:
      summary: Delete job posting
      parameters:
        - $ref: "#/components/parameters/EventParameterID"
      responses:
        '200':
          description: Successfully delete job event
        '401':
          description: Unauthorized error
        '404':
          description: Missing job event
